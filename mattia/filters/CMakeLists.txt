project(benchmark)
CMAKE_MINIMUM_REQUIRED(VERSION 2.8)
find_package(PCL 1.5 REQUIRED)
include_directories(${PCL_INCLUDE_DIRS})
link_directories(${PCL_LIBRARY_DIRS})
add_definitions(${PCL_DEFINITIONS})
add_executable(benchmark main.cpp)
TARGET_LINK_LIBRARIES( benchmark ${PCL_LIBRARIES})


project(bilateral)
#CMAKE_MINIMUM_REQUIRED(VERSION 2.8)
#find_package(PCL 1.4 REQUIRED)
include_directories(${PCL_INCLUDE_DIRS})
link_directories(${PCL_LIBRARY_DIRS})
add_definitions(${PCL_DEFINITIONS})
add_executable(bilateral bilateral.cpp)
TARGET_LINK_LIBRARIES( bilateral ${PCL_LIBRARIES})

project(radiusRem)
#CMAKE_MINIMUM_REQUIRED(VERSION 2.8)
#find_package(PCL 1.4 REQUIRED)
FIND_PACKAGE( OpenCV REQUIRED )
include_directories(${PCL_INCLUDE_DIRS})
link_directories(${PCL_LIBRARY_DIRS})
add_definitions(${PCL_DEFINITIONS})
add_executable(radiusRem radiusRem.cpp)
set(CMAKE_INCLUDE_DIRS_CONFIGCMAKE "${CMAKE_INSTALL_PREFIX}/include/opencv" "${CMAKE_INSTALL_PREFIX}/include") 
TARGET_LINK_LIBRARIES( radiusRem ${OpenCV_LIBS} ${PCL_LIBRARIES})

project(benchmark_eval)
#CMAKE_MINIMUM_REQUIRED(VERSION 2.8)
#find_package(PCL 1.4 REQUIRED)
include_directories(${PCL_INCLUDE_DIRS})
link_directories(${PCL_LIBRARY_DIRS})
add_definitions(${PCL_DEFINITIONS})
add_executable(benchmark_eval benchmark-compare.cpp)
TARGET_LINK_LIBRARIES( benchmark_eval ${PCL_LIBRARIES})